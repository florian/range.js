{
  "name": "grunt-mocha",
  "description": "Grunt task for running Mocha specs",
  "version": "0.1.7",
  "homepage": "https://github.com/kmiyashiro/grunt-mocha",
  "author": {
    "name": "Kelly Miyashiro",
    "email": "miyashiro.kelly@gmail.com",
    "url": "http://non-diligent.com"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/kmiyashiro/grunt-mocha.git"
  },
  "bugs": {
    "url": "https://github.com/kmiyashiro/grunt-mocha/issues"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/kmiyashiro/grunt-mocha/blob/master/LICENSE-MIT"
    }
  ],
  "main": "grunt.js",
  "engines": {
    "node": "*"
  },
  "dependencies": {
    "temporary": "~0.0.2",
    "growl": "~1"
  },
  "devDependencies": {
    "grunt": "~0.3"
  },
  "optionalDependencies": {
    "growl": "~1"
  },
  "keywords": [
    "gruntplugin"
  ],
  "readme": "Automatically run *client-side* mocha specs via grunt/mocha/PhantomJS\n\nFor a grunt task for server-side mocha tests, see https://github.com/yaymukund/grunt-simple-mocha\n\n# grunt-mocha\n\n(package/README format heavily borrowed from [grunt-jasmine-task](https://github.com/creynders/grunt-jasmine-task) and builtin QUnit task)\n\n[Grunt](https://github.com/cowboy/grunt) plugin for running Mocha browser specs in a headless browser (PhantomJS)\n\n## Getting Started\n\n### Task config\n\n```js\nmocha: {\n    // runs all html files (except test2.html) in the test dir\n    // In this example, there's only one, but you can add as many as\n    // you want. You can split them up into different groups here\n    // ex: admin: [ 'test/admin.html' ]\n    all: [ 'test/**/!(test2).html' ],\n    \n    // Runs 'test/test2.html' with specified mocha options.\n    // This variant auto-includes 'mocha-helper.js' so you do not have\n    // to include it in your HTML spec file. Instead, you must add an\n    // environment check before you run `mocha.run` in your HTML.\n    test2: {\n\n        // Test files\n        src: [ 'test/test2.html' ],\n\n        // mocha options\n        options: {\n            ignoreLeaks: false,\n            grep: 'food'\n        },\n\n        // Indicates whether 'mocha.run()' should be executed in \n        // 'mocha-helper.js'\n        run: true\n    }\n}\n```\n\n### Vanilla JS\n\n- Write mocha task description in grunt config using full format and specify `run: true` option (see `example/grunt.js` for details);\n- Check for PhantomJS `userAgent` in a test html file and run tests only in a real browser (see `example/test/test2.html` for details).\n\nIn this case you shouldn't include `mocha-helper.js` (it will be included automatically) and tests will be run from `mocha-helper.js`.\n\nAlternatively, include `mocha-helper.js` from `tasks/mocha` after you include `mocha.js` and run `mocha.setup` in your HTML file. The helper will override `mocha.setup` if it detects PhantomJS. See `example/test/test.html`.\n\n### AMD\n\nExample setup with AMD (advanced): https://gist.github.com/2655876\n\n### Grunt and this plugin\n\nFirst, make sure you have grunt installed globally, `npm install grunt -g`\n\nInstall this grunt plugin next to your project's [grunt.js gruntfile](https://github.com/cowboy/grunt/blob/master/docs/getting_started.md) with: `npm install grunt-mocha`\n\nThen add this line to your project's `grunt.js` gruntfile at the bottom:\n\n```javascript\ngrunt.loadNpmTasks('grunt-mocha');\n```\n\nAlso add this to the ```grunt.initConfig``` object in the same file:\n\n```javascript\nmocha: {\n  index: ['specs/index.html']\n},\n```\n\nReplace ```specs/index.html``` with the location of your mocha spec running html file.\n\nNow you can run the mocha task with `grunt mocha`, but it won't work. That's because you need...\n\n### PhantomJS\n\nThis task is for running Mocha tests in a headless browser, PhantomJS. [See the FAQ on how to install PhantomJS](https://github.com/cowboy/grunt/blob/master/docs/faq.md#why-does-grunt-complain-that-phantomjs-isnt-installed).\n\n### Mocha\n\nUse [Mocha](http://visionmedia.github.com/mocha/)\n\n### Maybe Growl?\n\nGrowl support is optional. I'm not sure what the Windows situation is with growl.\n\n### Hacks\n\nThe PhantomJS -> Grunt superdimensional conduit uses `alert`. If you have disabled or aliased alert in your app, this won't work. I have conveniently set a global `PHANTOMJS` on `window` so you can conditionally override alert in your app.\n\n## License\nCopyright (c) 2012 Kelly Miyashiro\nLicensed under the MIT license.",
  "readmeFilename": "README.md",
  "_id": "grunt-mocha@0.1.7",
  "_from": "grunt-mocha@~0.1"
}
